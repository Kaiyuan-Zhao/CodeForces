import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.StringTokenizer;

/**
 *
 * @author Kaiyuan
 */
public class IncreaseSubarraySums {

    public static void main(String[] args) {
        Kattio io = new Kattio();
        int test = io.nextInt();
        for (int tests = 0; tests < test; tests++) {

            int n = io.nextInt();
            int x = io.nextInt();
            int[] sums = new int[n + 1];
            sums[0] = 0;
            sums[1] = io.nextInt();
            for (int i = 2; i < n + 1; i++) {
                sums[i] = io.nextInt() + sums[i - 1];
            }
            int[] bests = new int[n + 1];
            //
            for (int i = 0; i <= n; i++) {
                // I = length
                int bst = 0;
                for (int j = i; j <= n; j++) {
                    // (from 0, i -> n-i-1 -> n-i-1)

                    int sum = 0;
                    sum = sums[j] - sums[j - i];
                    if (sum < 0 && bst == 0) {
                        bst = sum;
                    }
                    bst = Math.max(sum, bst);
                }

                bests[i] = bst;
            }

            //
            String line = "";
            for (int k = 0; k <= n; k++) {
                int out = 0;
                for (int i = 0; i <= n; i++) {
                    int temp = bests[i] + Math.min(i, k) * x;
                    out = Math.max(out, temp);
                }
                line += out + " ";
            }
            System.out.println(line.trim());
        }
    }

    static class Kattio extends PrintWriter {

        private BufferedReader r;
        private StringTokenizer st;
        // standard input

        public Kattio() {
            this(System.in, System.out);
        }

        public Kattio(InputStream i, OutputStream o) {
            super(o);
            r = new BufferedReader(new InputStreamReader(i));
        }
        // USACO-style file input

        public Kattio(String problemName) throws IOException {
            super(problemName + ".out");
            r = new BufferedReader(new FileReader(problemName + ".in"));
        }
        // returns null if no more input

        public String next() {
            try {
                while (st == null || !st.hasMoreTokens()) {
                    st = new StringTokenizer(r.readLine());
                }
                return st.nextToken();
            } catch (Exception e) {
            }
            return null;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }
    }
}
